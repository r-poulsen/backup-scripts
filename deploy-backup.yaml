---
- hosts: backup_clients

  tasks:
    - name: Set borg_repo fact
      set_fact:
        borg_repo: "ssh://{{ repo_server.user }}@{{ repo_server.host | trim('/') }}/{{ repo_server.path | trim('/') }}/{{ inventory_hostname | trim('/') }}/borg-backup"

    - name: Create directories
      become: true
      file:
        path: "{{ item.value }}"
        state: directory
        mode: "0750"
      loop: "{{ paths | dict2items }}"
      no_log: true

    # Each host has its own patterns.lst file, stored in the backup-config repo.
    - name: Copy files to etc/
      become: true
      ansible.builtin.copy:
        src: "~/git/backup-config/{{ ansible_hostname }}/patterns.lst"
        dest: "{{ paths.etc }}"
        mode: "0640"

    - name: Copy files to bin/
      become: true
      copy:
        src: "{{ item }}"
        dest: "{{ paths.bin }}"
        mode: "0750"
      loop:
        - src/borg-backup
        - src/borg-mount

    - name: Copy private key
      become: true
      copy:
        content: "{{ hostvars[inventory_hostname].borg_backup[ansible_hostname].private_key }}"
        dest: "{{ paths.var }}/private_key"
        mode: "0600"

    - name: Copy config-file
      become: true
      template:
        src: templates/backup.conf.j2
        dest: "{{ paths.etc }}/backup.conf"
        mode: "0660"

    - name: Copy crontab
      become: true
      ansible.builtin.template:
        src: templates/crontab.j2
        dest: "/etc/cron.d/backup"
        mode: "0644"

    - name: Copy logrotate
      become: true
      ansible.builtin.template:
        src: templates/logrotate.j2
        dest: "/etc/logrotate.d/borg_backup"
        mode: "0644"

- hosts: repo_server

  tasks:
    - name: Add public key
      ansible.posix.authorized_key:
        user: "{{ repo_server.user }}"
        state: present
        key: "{{ item.value.public_key }}"
      loop: "{{ borg_backup | dict2items }}"
      no_log: true

    - name: Create repository
      ansible.builtin.command: "BORG_PASSPHRASE={{ item.value.passphrase }} borg init --encryption=repokey /{{ repo_server.path  | trim('/') }}/{{ item.key }}/borg-backup/"
      args:
        creates: "/{{ repo_server.path  | trim('/') }}/{{ item.key }}/borg-backup/"
      loop: "{{ borg_backup | dict2items }}"
      no_log: true
